dist: focal

language: python

services:
  - docker

cache:
  directories:
    - $HOME/miniconda3

addons:
  apt_packages:
    - pandoc

stages:
  - test

notifications:
  email:
    recipients:
      - jdtuck@sandia.gov
      - dtucker1@illinois.edu
    on_success: change # default: change
    on_failure: always # default: always
  

jobs:
  include:
    - name: "Python 3.7"
      python: 3.7
    - name: "Python 3.8"
      python: 3.8
    - name: "Python 3.9"
      python: 3.9
    - name: "Python 3.10"
      python: 3.10
    - stage: Docker
      if: tag IS present
      name: "Docker Hub"
      install: skip
      script:
        - docker build -t tetonedge/fdasrsf -f bin/Dockerfile .
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push tetonedge/fdasrsf:latest
      after_success: skip

  allow_failures:
    - python: 3.10

install:
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - source "$HOME/miniconda/etc/profile.d/conda.sh"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a  
  - # Replace dep1 dep2 ... with your dependencies
  - conda create -c conda-forge -q -n test-environment python=$TRAVIS_PYTHON_VERSION cython matplotlib GPy cffi numba oldest-supported-numpy patsy scipy patsy tqdm joblib
  - conda activate test-environment
  - pip install codecov
  - conda list && pip freeze
  - python setup.py install
  
script:
  - coverage run -m unittest discover
after_success:
  - python setup.py bdist_wheel
  - codecov

deploy:
  - provider: pypi
    username: "__token__"
    password:
      secure: k2BJYlPDGAPspTL2U+BGhFevpxFz78JNJut3tGAJjC6/iQohCGy2hqzSpHn4SDlKDGtPROcj500NHC4b3Mfv5WE8XL1rxHc9ovH/5EQC+nXKaT9SrbNCQsKaNSadKY3PKpHp1jse2CKOEZ7I0zMm79m9s2wONQe4vlHTbxxs70QKOYHjK7dgP0FOqxVpElMWm19QXf6SJVjpUmXuj1N0l6b4c/csa41uWXE2ycAAAxLynlJ5gqpZGPCL6j0Dxin6kcyULHUTqGXE/arhmEd9Jz2O7RCK7qOGHE+SArngnrFNh2UGBzt+KOOoewtuvqu0+7QW0ZuoKjNLO9LfxjXgdt5mRYImlmql+Nso8HQwuMT1opasCd8GJQiFxIUYaiHy7J8ZvvWp6jVHNVg7EEGEgfddMH5qN7eQK6Dxv3F6yAHIjnnaxcPXTfdA7V/VUJbZz4hQ00RHnpRQmUDzxJEp5/9s1K1/z9w8y4V8l9/0kmsZMgBJlutW95va1Owjt6l9HTt21/CSkk12v7+RrgyxW6OMPX4uOr2TfVd3KquDqmwY2zLDUKtnq79FezdFFDLzjZSCYE5XE9Lfcmoz8Mitp0hBW4JKsQpq7ZH+FicM5yRtJc8QHbyeQlA9S/bbsOPHE3Z9qmUC/DydPKWWy98njO1HhAy1C5jXUZfwWTy2A90=
    distributions: sdist
    skip_existing: true
    on:
      tags: true
  - provider: releases
    api_key:
      secure:  "R8XzpdHEBzQrALFyGbWZUkFd4D9CNK2OZyjzat+Y0qceI0H5O3yanRmUnXtEsiKItO7v6+ykCffI1htxaHiH9S5FvfiQTLihhGjL6XwLPLSGrhSGv/khj4uzFnW2vKoOkqn1nxaYKpUipqvgUHglvroYp6s6oHRsjJ+vy1RiOweeO+4J/lxMg8KjclJ1aXKJ5vdAfQTT8ozeExC4C7312W9gE/XnFHaWDiuH2Fgown56FNpN4Blf12DMk9NvawLOQbg+DPkLr4XOOcp0f4a+fNoK/8oBVJjICpZ/imH9fsQMX9JpzjwR6G0Kr3DOeuZfJg8fBb9IOMPuLj5Y0cxM5WH0NXBuaZ4fsSwJSQCgXjzoJ32/TrvHItfIyyjy+nMEd0K0PE1C17jvvnZHtLEZBGgNj144+KewNeJM6rQ8eSNXM8lg99YjpgzfuTGbT4k3bnE+xWI1ieKaMCRVCI2fYx4ugXECYCZ3w0a9C4QYz1ISGEAkfo/tOBTnhfX3VYtrrKmv7GWPGg4rIAA4kmgJXQJMkF9jsKcCi8D/4P3BxCBjdxP5V/qty7zhBwDEYKolvLAXvibhxQAiak6GikSHsVJGl4o5GV/ViWwrcQ13ZlPR1QDc0oeLzpMNMz0Y15gENgMIG+yStgV/qoulDX6Qp6tkBihsIx4D0FsoLoY4jpI="
    file: dist/*
    on:
      tags: true
